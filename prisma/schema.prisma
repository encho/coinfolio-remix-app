datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model RiskLevel {
  id          String                   @id @default(cuid())
  type        RiskLevelType            @default(LOW_RISK)
  name        String
  description String
  strategies  RiskLevelsOnStrategies[]
}

enum RiskLevelType {
  LOW_RISK
  MEDIUM_RISK
  HIGH_RISK
}

model Strategy {
  id          String                   @id @default(cuid())
  name        String
  description String                   @db.VarChar(150)
  slug        String
  category    StrategyCategoryType     @default(SINGLE_COIN)
  riskLevels  RiskLevelsOnStrategies[]
}

enum StrategyCategoryType {
  SINGLE_COIN
  CRYPTO_MARKET_BETA
}

model RiskLevelsOnStrategies {
  strategy    Strategy  @relation(fields: [strategyId], references: [id])
  strategyId  String
  riskLevel   RiskLevel @relation(fields: [riskLevelId], references: [id])
  riskLevelId String
  assignedAt  DateTime  @default(now())

  @@id([strategyId, riskLevelId])
}
